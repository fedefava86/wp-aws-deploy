---
# Common-VPC-wSubnets : Creates a new VPC
# composed by 4 subnets, in two AZ
# 2 subnets are public
# 2 subnets are private
# one RT in common for public subnets, with IGW route
# one RT in common for private subnets, with no route
# only one SG, allowing all traffic from inside SG.
# Each service inside this VPC will bring its own SG

AWSTemplateFormatVersion: "2010-09-09"
Description: "VPC w Subnets"

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "Deployment Parameters"
        Parameters:
          - AZ1
          - AZ2
      - Label:
          default: "VPC Parameters"
        Parameters:
          - VPCName
          - VPCCIDR
          - SubnetPublic1CIDR
          - SubnetPublic2CIDR
          - SubnetPrivate1CIDR
          - SubnetPrivate2CIDR

Parameters:
  AZ1:
    Description: "AZ 1 (z1)"
    Type: AWS::EC2::AvailabilityZone::Name
  AZ2:
    Description: "AZ 2 (z2)"
    Type: AWS::EC2::AvailabilityZone::Name
  VPCName:
    Description: "Name for the new VPC (without VPC-)"
    Type: String
    Default: "Test"
  SubnetPublic1CIDR:
    Description: "CIDR for Public Subnet on AZ 1"
    Type: String
    Default: "172.29.0.0/24"
    ConstraintDescription: "IPv4 Block in the CIDR notation is required, e.g. 10.0.0.0/22"
    AllowedPattern: "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/[0-9]{1,2}"
  SubnetPublic2CIDR:
    Description: "CIDR for Public Subnet on AZ "
    Type: String
    Default: "172.29.1.0/24"
    ConstraintDescription: "IPv4 Block in the CIDR notation is required, e.g. 10.0.0.0/22"
    AllowedPattern: "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/[0-9]{1,2}"
  SubnetPrivate1CIDR:
    Description: "CIDR for Private Subnet on AZ 1"
    Type: String
    Default: "172.29.0.0/24"
    ConstraintDescription: "IPv4 Block in the CIDR notation is required, e.g. 10.0.0.0/22"
    AllowedPattern: "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/[0-9]{1,2}"
  SubnetPrivate2CIDR:
    Description: "CIDR for Private Subnet on AZ 2"
    Type: String
    Default: "172.29.1.0/24"
    ConstraintDescription: "IPv4 Block in the CIDR notation is required, e.g. 10.0.0.0/22"
    AllowedPattern: "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/[0-9]{1,2}"
  VPCCIDR:
    Description: "Main CIDR for VPC"
    Type: String
    Default: "172.29.0.0/20"
    ConstraintDescription: "IPv4 Block in the CIDR notation is required, e.g. 10.0.0.0/22"
    AllowedPattern: "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}/[0-9]{1,2}"

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "VPC-${VPCName}"
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "IGW-${VPCName}"
  VPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  SubnetPublic1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Ref AZ1
      CidrBlock: !Ref SubnetPublic1CIDR
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-public-1"
  SubnetPublic2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Ref AZ2
      CidrBlock: !Ref SubnetPublic2CIDR
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-public-2"
  SubnetPrivate1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Ref AZ1
      CidrBlock: !Ref SubnetPrivate1CIDR
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-private-1"
  SubnetPrivate2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Ref AZ2
      CidrBlock: !Ref SubnetPrivate2CIDR
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-private-2"

  RouteTablePublic:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "RT-Public-${VPCName}"
  RouteTableAssociationPublic1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref SubnetPublic1
      RouteTableId: !Ref RouteTablePublic
  RouteTableAssociationPublic2:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref SubnetPublic2
      RouteTableId: !Ref RouteTablePublic
  RouteTableInternetRoute:
    Type: "AWS::EC2::Route"
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  RouteTablePrivate:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "RT-Private-${VPCName}"
  RouteTableAssociationPrivate1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref SubnetPrivate1
      RouteTableId: !Ref RouteTablePrivate
  RouteTableAssociationPrivate2:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref SubnetPrivate2
      RouteTableId: !Ref RouteTablePrivate


  ElasticIP0:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: "vpc"

  ElasticIP1:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: "vpc"

  NATGateway0:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId:
        Fn::GetAtt:
          - "ElasticIP0"
          - "AllocationId"
      SubnetId:
        Ref: "SubnetPublic1"

  NATGateway1:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId:
        Fn::GetAtt:
          - "ElasticIP1"
          - "AllocationId"
      SubnetId:
        Ref: "SubnetPublic2"

  PrivateRouteToInternet0:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId:
        Ref: "RouteTablePrivate"
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId:
        Ref: "NATGateway0"

  # PrivateRouteToInternet1:
  #   Type: "AWS::EC2::Route"
  #   Properties:
  #     RouteTableId:
  #       Ref: "PrivateRouteTable1"
  #     DestinationCidrBlock: "0.0.0.0/0"
  #     NatGatewayId:
  #       Ref: "NATGateway1"

  VPCSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "SG-Private-${VPCName}"
      GroupDescription: !Sub "SG-Private-${VPCName}"
      Tags:
        - Key: Name
          Value: !Sub "SG-${VPCName}"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: "-1"
          CidrIp: !Ref VPCCIDR
          FromPort: "-1"
          ToPort: "-1"
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0

Outputs:
  StackName:
    Description: "Stack name."
    Value: !Sub "${AWS::StackName}"
  AZA:
    Description: "AZ of A (1)"
    Value: !Ref AZ1
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "AZ1"]]
  AZB:
    Description: "AZ of B (2)"
    Value: !Ref AZ2
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "AZ2"]]
  CidrBlock:
    Description: "The set of IP addresses for the VPC."
    Value: !GetAtt "VPC.CidrBlock"
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "CIDR"]]
  VPC:
    Description: "VPC."
    Value: !Ref VPC
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "VPC"]]
  VPCNameOut:
    Description: "VPC Name"
    Value: !Ref VPCName
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "VPCName"]]
  RouteTablePublic:
    Description: "Route Table for public subnets"
    Value: !Ref RouteTablePublic
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "RouteTablePublic"]]
  RouteTablePrivate:
    Description: "Route Table for private subnets"
    Value: !Ref RouteTablePrivate
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "RouteTablePrivate"]]
  AZASubnetPublic:
    Description: "Public Subnet for AZ 1"
    Value: !Ref SubnetPublic1
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "SubnetPublic1"]]
  AZBSubnetPublic:
    Description: "Public Subnet for AZ 2"
    Value: !Ref SubnetPublic2
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "SubnetPublic2"]]
  AZASubnetPrivate:
    Description: "Private Subnet for AZ 1"
    Value: !Ref SubnetPrivate1
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "SubnetPrivate1"]]
  AZBSubnetPrivate:
    Description: "Private Subnet for AZ 2"
    Value: !Ref SubnetPrivate2
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "SubnetPrivate2"]]
  SubnetsPrivate:
    Description: "Comma separated list of private subnets"
    Value: !Join [",", [!Ref "SubnetPrivate1", !Ref "SubnetPrivate2"]]
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "SubnetsPrivate"]]
  SubnetsPublic:
    Description: "Comma separated list of public subnets"
    Value: !Join [",", [!Ref "SubnetPublic1", !Ref "SubnetPublic2"]]
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "SubnetsPublic"]]
  SubnetPublic1CIDR:
    Description: "Public Subnet CIDR for AZ 1"
    Value: !Ref SubnetPublic1CIDR
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "SubnetPublic1CIDR"]]
  SubnetPublic2CIDR:
    Description: "Public Subnet CIDR for AZ 2"
    Value: !Ref SubnetPublic2CIDR
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "SubnetPublic2CIDR"]]
  SubnetPrivate1CIDR:
    Description: "Private Subnet CIDR for AZ 1"
    Value: !Ref SubnetPrivate1CIDR
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "SubnetPrivate1CIDR"]]
  SubnetPrivate2CIDR:
    Description: "Private Subnet CIDR for AZ 2"
    Value: !Ref SubnetPrivate2CIDR
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "SubnetPrivate2CIDR"]]
  VPCSecurityGroup:
    Description: "Security Group of VPC"
    Value: !Ref VPCSecurityGroup
    Export:
      Name: !Join ["-", [!Ref "AWS::StackName", "SG"]]
